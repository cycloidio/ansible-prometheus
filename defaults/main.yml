---
path: /opt/

# install_mode can be either docker or system
# currently only mongodb_exporter is supported with `install_mode: system`
install_mode: docker

#
# General
#

install_prometheus: false
install_alertmanager: false
install_blackbox_exporter: false
install_node_exporter: false
install_grafana: false
install_mongodb_exporter: false

#
# Prometheus
#
prometheus_version: latest
prometheus_image: "prom/prometheus:{{ prometheus_version }}"
prometheus_hostname: "{{ ansible_fqdn }}"
prometheus_ip: "{{ ansible_default_ipv4.address }}"
prometheus_restart_handler: "{% if install_mode == 'docker' %}restart docker prometheus{% else %}restart prometheus{% endif %}"

prometheus_commandline_args:
  config.file: "/prometheus-data/prometheus.yml"
  storage.tsdb.path: "/prometheus-data/data"
  web.external-url: "{{ prometheus_hostname }}"

prometheus_scrape_interval: 15s
prometheus_evaluation_interval: 15s
prometheus_external_labels: ''

# Enable some default alerts. You should add your own custom ones.
default_alert_rules: true

# Fileglobs loop format
# http://docs.ansible.com/ansible/latest/playbooks_loops.html#id4
prometheus_rule_files: []
# Example :
#  - templates/rules/opsgenie.rules
#  - templates/rules/telegraf.rules
#  - templates/rules/telegraf-elasticsearch.rules
#  - templates/rules/telegraf-redis.rules
#  - templates/rules/mongodb_exporter.rules

# If set, will add UUID labels on alert rules.
prometheus_alerts_uuid: ""

# Top global scope level to define default variable for each checks
# You should not have to override this variable
prometheus_rules_default_root:
  for: 5m
  receiver: on_call
  selector: ""
  severity: critical

# Telegraf rules
prometheus_telegraf_rules_config: {}
# prometheus_telegraf_rules_config:
#   CPUUsage:
#     - name: CPUUsageProd
#         threshold: 80
#     - name: CPUUsageStaging

prometheus_telegraf_rules_default_global: {}

prometheus_telegraf_rules_config_default:
  CPUUsage:
    name: CPUUsage
    threshold: 90
    severity: warning
  MemoryUsage:
    name: MemoryUsage
    threshold: 90
  LoadAverage:
    name: LoadAverage
    threshold: 6
    severity: warning
  LowDiskSpace:
    name: LowDiskSpace
    threshold: 90
  LowDiskInodes:
    name: LowDiskInodes
    threshold: 90
  InstanceDown:
    name: InstanceDown
    selector: env !~ "dev|demo|preprod|staging"

  HttpResponseCode:
    name: HttpResponseCode
    threshold: 302
  HttpResponseStringMatch:
    name: HttpResponseStringMatch
    threshold: 0

  LbCertsExpireCheck:
    name: LbCertsExpireCheck
    threshold: 30

  SesSentQuota:
    name: SesSentQuota
    threshold: 90
  SesReputation:
    name: SesReputation
    threshold: 10

  EC2CpuCreditBalance:
    name: EC2CpuCreditBalance
    threshold: 25
  EC2Events:
    name: EC2Events

  RDSCpuCreditBalance:
    name: RDSCpuCreditBalance
    threshold: 25
  RDSEvents:
    name: RDSEvents

  OpsgenieHeartbeat:
    name: OpsgenieHeartbeat
    receiver: opsgenie_heartbeat

  EventstoreIsAlive:
    name: EventstoreIsAlive
  EventstoreCheckError:
    name: EventstoreCheckError

  ElasticsearchTooFewNodesRunning:
    name: ElasticsearchTooFewNodesRunning
    threshold: 3
  ElasticsearchHeapTooHigh:
    name: ElasticsearchHeapTooHigh
    for: 15m
    threshold: 90
  ElasticsearchCPUTooHigh:
    name: ElasticsearchCPUTooHigh
    for: 15m
    threshold: 90

  RedisMemoryUsageTooHigh:
    name: RedisMemoryUsageTooHigh
    threshold: 90

  MongodbReplicationLag:
    name: MongodbReplicationLag
    threshold: 10
    severity: warning
  MongodbReplicationStatus3:
    name: MongodbReplicationStatus3
    severity: warning
  MongodbReplicationStatus6:
    name: MongodbReplicationStatus6
    severity: warning
  MongodbReplicationStatus8:
    name: MongodbReplicationStatus8
    severity: warning
  MongodbReplicationStatus9:
    name: MongodbReplicationStatus9
    severity: warning
  MongodbReplicationStatus10:
    name: MongodbReplicationStatus10
    severity: warning
  MongodbNumberCursorsOpen:
    name: MongodbNumberCursorsOpen
    threshold: 10000
    severity: warning

_prometheus_telegraf_rules_default_global: "{{ prometheus_rules_default_root | combine(prometheus_telegraf_rules_default_global) }}"

# See https://prometheus.io/docs/operating/configuration/#<scrape_config>
prometheus_scrape_configs:
- job_name: 'prometheus'
  scrape_interval: 10s
  scrape_timeout:  10s
  static_configs:
    - targets: ['localhost:9090']

- job_name: 'node_exporter'
  scrape_interval: 5s
  static_configs:
    - targets:
      - "{{ ansible_default_ipv4.address }}:9100"

prometheus_rules:
- '/prometheus-data/*.rules'

prometheus_alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "{{ alertmanager_ip }}:9093"


#
# Alertmanager
#
alertmanager_version: latest
alertmanager_image: "prom/alertmanager:{{ alertmanager_version }}"
alertmanager_hostname: "{{ ansible_fqdn }}"
alertmanager_ip: "{{ ansible_default_ipv4.address }}"
alertmanager_restart_handler: "{% if install_mode == 'docker' %}restart docker alertmanager{% else %}restart alertmanager{% endif %}"

alertmanager_commandline_args:
  config.file: "/alertmanager/alertmanager.yml"
  web.external-url: "http://{{ alertmanager_hostname }}"

alertmanager_template_files:
  - files/alertmanager/templates/*.tmpl

alertmanager_route:
  group_wait: 30s
  group_interval: 2m
  repeat_interval: 10m
  receiver: webhook
  routes:
  - match:
      severity: warning
    receiver: webhook
  - match:
        severity: critical
    receiver: webhook
  group_by:
  - cluster
  - alertname
  - host

alertmanager_templates:
- '/alertmanager/template/*.tmpl'

alertmanager_inhibit_rules:
- source_match:
    severity: critical
  target_match:
    severity: warning
  equal:
  - alertname
  - host

alertmanager_receivers:
- name: 'webhook'
  webhook_configs:
  - url: 'http://127.0.0.1:5001/'


#
# Blackbox exporter
#
blackbox_exporter_version: latest
blackbox_exporter_image: "prom/blackbox-exporter:{{ blackbox_exporter_version }}"
blackbox_exporter_hostname: blackbox-exporter
blackbox_exporter_restart_handler: "{% if install_mode == 'docker' %}restart docker blackbox_exporter{% else %}restart blackbox_exporter{% endif %}"

blackbox_exporter_commandline_args:
  config.file: "/blackbox-data/blackbox_exporter.yml"

blackbox_exporter_modules:
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_status_codes: []
      method: GET
      headers:
        Host: vhost.example.com
        Accept-Language: en-US
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false


#
# Node exporter
#
node_exporter_version: latest
node_exporter_image: "prom/node-exporter:{{ node_exporter_version }}"
node_exporter_hostname: "{{ ansible_fqdn }}"
node_exporter_restart_handler: "{% if install_mode == 'docker' %}restart docker node_exporter{% else %}restart node_exporter{% endif %}"

node_exporter_commandline_args:
  path.rootfs: "/host"


#
# Grafana
#

grafana_version: latest
grafana_image: "grafana/grafana:{{ grafana_version }}"
grafana_hostname: "{{ ansible_fqdn }}"
grafana_restart_handler: "{% if install_mode == 'docker' %}restart docker grafana{% else %}restart grafana{% endif %}"

grafana_admin_password: admin

grafana_database_type: mysql
grafana_database_host: "localhost:3306"
grafana_database_name: grafana
grafana_database_user: grafana
grafana_database_password: s3cr3t

# Doc here for the dashboards format http://docs.grafana.org/reference/dashboard/
grafana_dashboards_files: []

# Doc here for the dashboards format https://grafana.com/docs/administration/provisioning/
grafana_provisioning_files: []

grafana_default_datasource:
  name: "prometheus"
  type: "prometheus"
  url: "http://{{ prometheus_ip }}:9090"
  access: "proxy"
  basicAuth: false
  isDefault: true

#
# MongoDB exporter
#
mongodb_exporter_version: 0.8.0
mongodb_exporter_restart_handler: "{% if install_mode == 'docker' %}restart docker mongodb_exporter{% else %}restart mongodb_exporter{% endif %}"

# MongoDB URI in format [mongodb://][user:pass@]host1[:port1][,host2[:port2],...][/database][?options]
mongodb_exporter_mongodb_uri: "mongodb://{{ ansible_default_ipv4.address }}:27017"

mongodb_exporter_port: 9216

mongodb_exporter_env_vars: []

mongodb_exporter_commandline_args:
  web.listen-address: ":{{ mongodb_exporter_port }}"
  mongodb.uri: "{{ mongodb_exporter_mongodb_uri }}"
  collect.database: true
  collect.collection: true
  collect.topmetrics: true
  collect.indexusage: true

# docker install
mongodb_exporter_hostname: "{{ ansible_fqdn }}"
mongodb_exporter_image: "ssheehy/mongodb-exporter:{{ node_exporter_version }}"

# system install
mongodb_exporter_install_path: "{{ path }}/mongodb_exporter"
mongodb_exporter_base_url: https://github.com/percona/mongodb_exporter
mongodb_exporter_release_url: "{{ mongodb_exporter_base_url }}/releases/download/v{{ mongodb_exporter_version }}/mongodb_exporter-{{ mongodb_exporter_version }}.{{ ansible_system |lower }}-amd64.tar.gz"
mongodb_exporter_system_user: mongodb_exporter
mongodb_exporter_system_groups: ['mongodb_exporter']

# rules
mongodb_exporter_prometheus_rules_config: {}
# mongodb_exporter_prometheus_rules_config:
#   MongodbReplicationLag:
#     - name: MongodbReplicationLagProd
#         threshold: 5
#     - name: MongodbReplicationLagStaging

mongodb_exporter_prometheus_rules_default_global: {}

mongodb_exporter_prometheus_rules_config_default:
  MongodbReplicationLag:
    name: MongodbReplicationLag
    threshold: 10
    severity: warning
  MongodbReplicationHeadroom:
    name: MongodbReplicationHeadroom
    threshold: 0
    severity: warning
  MongodbReplicationStatus3:
    name: MongodbReplicationStatus3
  MongodbReplicationStatus6:
    name: MongodbReplicationStatus6
  MongodbReplicationStatus8:
    name: MongodbReplicationStatus8
  MongodbReplicationStatus9:
    name: MongodbReplicationStatus9
  MongodbReplicationStatus10:
    name: MongodbReplicationStatus10
  MongodbNumberCursorsOpen:
    name: MongodbNumberCursorsOpen
    threshold: 10000
    severity: warning
  MongodbCursorsTimeouts:
    name: MongodbCursorsTimeouts
    threshold: 100
    severity: warning
  MongodbTooManyConnections:
    name: MongodbTooManyConnections
    threshold: 500
    severity: warning

_mongodb_exporter_prometheus_rules_default_global: "{{ prometheus_rules_default_root | combine(mongodb_exporter_prometheus_rules_default_global) }}"
